import { AggregateCommandLike, AggregateMixParamType, AggregateProps } from '../../../aggregateCommand/interface';
import { SQLAggregateCommandClip } from './interface';
/**
 * @description aggregate clip 片段
 */
declare class MySQLAggregateCommandClip implements SQLAggregateCommandClip {
    aggrControllerClip(aggregate: AggregateCommandLike): string;
    aggrValueClip(value: AggregateMixParamType): string;
    and(aggregate: AggregateProps): string;
    or(aggregate: AggregateProps): string;
    not(aggregate: AggregateProps): string;
    nor(aggregate: AggregateProps): string;
    nand(aggregate: AggregateProps): string;
    cmp(aggregate: AggregateProps): string;
    eq(aggregate: AggregateProps): string;
    neq(aggregate: AggregateProps): string;
    lt(aggregate: AggregateProps): string;
    lte(aggregate: AggregateProps): string;
    gt(aggregate: AggregateProps): string;
    gte(aggregate: AggregateProps): string;
    in(aggregate: AggregateProps): string;
    nin(aggregate: AggregateProps): string;
    abs(aggregate: AggregateProps): string;
    sqrt(aggregate: AggregateProps): string;
    ln(aggregate: AggregateProps): string;
    log10(aggregate: AggregateProps): string;
    sin(aggregate: AggregateProps): string;
    asin(aggregate: AggregateProps): string;
    cos(aggregate: AggregateProps): string;
    acos(aggregate: AggregateProps): string;
    tan(aggregate: AggregateProps): string;
    atan(aggregate: AggregateProps): string;
    cot(aggregate: AggregateProps): string;
    floor(aggregate: AggregateProps): string;
    round(aggregate: AggregateProps): string;
    ceil(aggregate: AggregateProps): string;
    exp(aggregate: AggregateProps): string;
    sign(aggregate: AggregateProps): string;
    mod(aggregate: AggregateProps): string;
    log(aggregate: AggregateProps): string;
    pow(aggregate: AggregateProps): string;
    greatest(aggregate: AggregateProps): string;
    least(aggregate: AggregateProps): string;
    add(aggregate: AggregateProps): string;
    subtract(aggregate: AggregateProps): string;
    multiply(aggregate: AggregateProps): string;
    divide(aggregate: AggregateProps): string;
    length(aggregate: AggregateProps): string;
    reverse(aggregate: AggregateProps): string;
    trim(aggregate: AggregateProps): string;
    upper(aggregate: AggregateProps): string;
    lower(aggregate: AggregateProps): string;
    left(aggregate: AggregateProps): string;
    right(aggregate: AggregateProps): string;
    replace(aggregate: AggregateProps): string;
    substring(aggregate: AggregateProps): string;
    insert(aggregate: AggregateProps): string;
    concat(aggregate: AggregateProps): string;
    avg(aggregate: AggregateProps): string;
    max(aggregate: AggregateProps): string;
    min(aggregate: AggregateProps): string;
    sum(aggregate: AggregateProps): string;
    count(aggregate: AggregateProps): string;
    cond(aggregate: AggregateProps): string;
    ifnull(aggregate: AggregateProps): string;
    json_contains(aggregate: AggregateProps): string;
    json_contains_path(aggregate: AggregateProps): string;
    json_search(aggregate: AggregateProps): string;
    json_extract(aggregate: AggregateProps): string;
    json_merge_preserve(aggregate: AggregateProps): string;
    json_merge_patch(aggregate: AggregateProps): string;
    json_set(aggregate: AggregateProps): string;
    json_insert(aggregate: AggregateProps): string;
    json_replace(aggregate: AggregateProps): string;
    json_remove(aggregate: AggregateProps): string;
    json_array_append(aggregate: AggregateProps): string;
    json_array_insert(aggregate: AggregateProps): string;
    json_object(aggregate: AggregateProps): string;
    json_array(aggregate: AggregateProps): string;
    json_type(aggregate: AggregateProps): string;
    json_keys(aggregate: AggregateProps): string;
    json_depth(aggregate: AggregateProps): string;
    json_length(aggregate: AggregateProps): string;
    json_valid(aggregate: AggregateProps): string;
    json_pretty(aggregate: AggregateProps): string;
    json_quote(aggregate: AggregateProps): string;
    json_unquote(aggregate: AggregateProps): string;
}
declare const sqlAggregateCommandClip: MySQLAggregateCommandClip;
export { sqlAggregateCommandClip, MySQLAggregateCommandClip };
